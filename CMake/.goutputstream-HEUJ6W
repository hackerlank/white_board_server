cmake_minimum_required (VERSION 2.8)

set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELWITHDEBINFO}")

set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++11")

if (CMAKE_COMPILER_IS_GNUCC)
    #set(CMAKE_C_COMPILER "/usr/bin/gcc-4.7")
    #set(CMAKE_CXX_COMPILER "/usr/bin/g++-4.7")
    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall -static-libgcc")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -std=gnu++11 -static-libstdc++ -static-libgcc")
endif (CMAKE_COMPILER_IS_GNUCC)

if (CMAKE_COMPILER_IS_GNUCC)
    execute_process(COMMAND ${CMAKE_C_COMPILER} -dumpversion
                    OUTPUT_VARIABLE GCC_VERSION)
    if (GCC_VERSION VERSION_LESS 4.7)
        message(FATAL_ERROR "gcc 4.7 or greater is required.")
    endif (GCC_VERSION VERSION_LESS 4.7)
endif (CMAKE_COMPILER_IS_GNUCC)

if (APPLE)
    include_directories ("/usr/local/include")
    link_directories ("/usr/local/lib")
    link_directories ("build/lib")
endif (APPLE)

if (CMAKE_RUNTIME_OUTPUT_DIRECTORY)
    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
endif (CMAKE_RUNTIME_OUTPUT_DIRECTORY)

