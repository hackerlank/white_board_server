// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoomOperate.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "RoomOperate.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* RoomOperate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RoomOperate_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_RoomOperate_2eproto() {
  protobuf_AddDesc_RoomOperate_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "RoomOperate.proto");
  GOOGLE_CHECK(file != NULL);
  RoomOperate_descriptor_ = file->message_type(0);
  static const int RoomOperate_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, oprate_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, use_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, room_key_origin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, room_key_destination_),
  };
  RoomOperate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RoomOperate_descriptor_,
      RoomOperate::default_instance_,
      RoomOperate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomOperate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RoomOperate));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_RoomOperate_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RoomOperate_descriptor_, &RoomOperate::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_RoomOperate_2eproto() {
  delete RoomOperate::default_instance_;
  delete RoomOperate_reflection_;
}

void protobuf_AddDesc_RoomOperate_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021RoomOperate.proto\"k\n\013RoomOperate\022\023\n\013op"
    "rate_type\030\001 \001(\005\022\020\n\010use_name\030\002 \001(\t\022\027\n\017roo"
    "m_key_origin\030\003 \001(\t\022\034\n\024room_key_destinati"
    "on\030\004 \001(\t", 128);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "RoomOperate.proto", &protobuf_RegisterTypes);
  RoomOperate::default_instance_ = new RoomOperate();
  RoomOperate::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_RoomOperate_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_RoomOperate_2eproto {
  StaticDescriptorInitializer_RoomOperate_2eproto() {
    protobuf_AddDesc_RoomOperate_2eproto();
  }
} static_descriptor_initializer_RoomOperate_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RoomOperate::kOprateTypeFieldNumber;
const int RoomOperate::kUseNameFieldNumber;
const int RoomOperate::kRoomKeyOriginFieldNumber;
const int RoomOperate::kRoomKeyDestinationFieldNumber;
#endif  // !_MSC_VER

RoomOperate::RoomOperate()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoomOperate)
}

void RoomOperate::InitAsDefaultInstance() {
}

RoomOperate::RoomOperate(const RoomOperate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:RoomOperate)
}

void RoomOperate::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  oprate_type_ = 0;
  use_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_origin_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  room_key_destination_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RoomOperate::~RoomOperate() {
  // @@protoc_insertion_point(destructor:RoomOperate)
  SharedDtor();
}

void RoomOperate::SharedDtor() {
  if (use_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete use_name_;
  }
  if (room_key_origin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_key_origin_;
  }
  if (room_key_destination_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete room_key_destination_;
  }
  if (this != default_instance_) {
  }
}

void RoomOperate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomOperate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RoomOperate_descriptor_;
}

const RoomOperate& RoomOperate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_RoomOperate_2eproto();
  return *default_instance_;
}

RoomOperate* RoomOperate::default_instance_ = NULL;

RoomOperate* RoomOperate::New() const {
  return new RoomOperate;
}

void RoomOperate::Clear() {
  if (_has_bits_[0 / 32] & 15) {
    oprate_type_ = 0;
    if (has_use_name()) {
      if (use_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        use_name_->clear();
      }
    }
    if (has_room_key_origin()) {
      if (room_key_origin_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        room_key_origin_->clear();
      }
    }
    if (has_room_key_destination()) {
      if (room_key_destination_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        room_key_destination_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RoomOperate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoomOperate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 oprate_type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oprate_type_)));
          set_has_oprate_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_use_name;
        break;
      }

      // optional string use_name = 2;
      case 2: {
        if (tag == 18) {
         parse_use_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_use_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->use_name().data(), this->use_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "use_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_room_key_origin;
        break;
      }

      // optional string room_key_origin = 3;
      case 3: {
        if (tag == 26) {
         parse_room_key_origin:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_key_origin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_key_origin().data(), this->room_key_origin().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "room_key_origin");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_room_key_destination;
        break;
      }

      // optional string room_key_destination = 4;
      case 4: {
        if (tag == 34) {
         parse_room_key_destination:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_room_key_destination()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->room_key_destination().data(), this->room_key_destination().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "room_key_destination");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoomOperate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoomOperate)
  return false;
#undef DO_
}

void RoomOperate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoomOperate)
  // optional int32 oprate_type = 1;
  if (has_oprate_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oprate_type(), output);
  }

  // optional string use_name = 2;
  if (has_use_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->use_name().data(), this->use_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "use_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->use_name(), output);
  }

  // optional string room_key_origin = 3;
  if (has_room_key_origin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key_origin().data(), this->room_key_origin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_key_origin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->room_key_origin(), output);
  }

  // optional string room_key_destination = 4;
  if (has_room_key_destination()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key_destination().data(), this->room_key_destination().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_key_destination");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->room_key_destination(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RoomOperate)
}

::google::protobuf::uint8* RoomOperate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:RoomOperate)
  // optional int32 oprate_type = 1;
  if (has_oprate_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oprate_type(), target);
  }

  // optional string use_name = 2;
  if (has_use_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->use_name().data(), this->use_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "use_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->use_name(), target);
  }

  // optional string room_key_origin = 3;
  if (has_room_key_origin()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key_origin().data(), this->room_key_origin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_key_origin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->room_key_origin(), target);
  }

  // optional string room_key_destination = 4;
  if (has_room_key_destination()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->room_key_destination().data(), this->room_key_destination().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "room_key_destination");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->room_key_destination(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoomOperate)
  return target;
}

int RoomOperate::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 oprate_type = 1;
    if (has_oprate_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oprate_type());
    }

    // optional string use_name = 2;
    if (has_use_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->use_name());
    }

    // optional string room_key_origin = 3;
    if (has_room_key_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room_key_origin());
    }

    // optional string room_key_destination = 4;
    if (has_room_key_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->room_key_destination());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomOperate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RoomOperate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RoomOperate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RoomOperate::MergeFrom(const RoomOperate& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oprate_type()) {
      set_oprate_type(from.oprate_type());
    }
    if (from.has_use_name()) {
      set_use_name(from.use_name());
    }
    if (from.has_room_key_origin()) {
      set_room_key_origin(from.room_key_origin());
    }
    if (from.has_room_key_destination()) {
      set_room_key_destination(from.room_key_destination());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RoomOperate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomOperate::CopyFrom(const RoomOperate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomOperate::IsInitialized() const {

  return true;
}

void RoomOperate::Swap(RoomOperate* other) {
  if (other != this) {
    std::swap(oprate_type_, other->oprate_type_);
    std::swap(use_name_, other->use_name_);
    std::swap(room_key_origin_, other->room_key_origin_);
    std::swap(room_key_destination_, other->room_key_destination_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RoomOperate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RoomOperate_descriptor_;
  metadata.reflection = RoomOperate_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
